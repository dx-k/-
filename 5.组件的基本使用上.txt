1.组件的注册
    组件之间可以进行相互的引用
    vue中组件的引用原则：先注册后使用
1.1 注册组件的两种方式
    1.全局注册组件
        被全局注册的组件可以在全局任何一个组件内使用
    2.局部注册组件
        被局部注册的组件只能在当前注册的范围内使用
1.2 全局注册组件
    1.在main.js中使用 import 导入组件
1.3 使用component全局注册组件
    2.使用app.commponent("注册后的组件名",组件名) 方法全局注册组件
    3.使用<注册后的组件名>标签来使用组件
1.4 局部注册组件
    因为只能在当前注册的范围内使用，所以需要到使用的组件内导入需要注册组件
    1.在app.vue中使用 import 导入组件
    2.在与el,data,methods节点平齐的地方新增一个节点components
    3.使用键值对的形式添加局部注册组件
        "注册后的组件名":"导入的组件名"
1.5 全局注册组件与局部注册组件
    全局注册组件可以被全局任何一个组件内使用
    局部注册组件只能在当前注册范围内使用
    开发使用频率高，使用全局组件
    特定情况下会被用到，使用局部组件
1.6 组件注册时名称的大小写
1.7 通过name属性注册组件
    在注册组件期间，除了可以直接提供组件的注册名称之外，还可以把组件的name属性作为注册后组件的名称
    app.component(Test.name,Test);

2.组件之间的样式冲突问题
    修改父组件中的样式，会影响到子组件的样式
    默认情况下，写在.vue组件中的样式会全局生效，因此很容易造成多个组件之间的样式冲突问题。导致组件之间样式冲突的根本问题是：
    1.单页面应用程序中，所有组件的DOM结构，都是基于唯一的index.html页面进行呈现的
    2.每个组件中的样式，都会影响到整个index.html页面中的DOM结构
2.1 如何解决组件样式冲突的问题
    为每一个组件分配唯一的自定义属性，在编写组件样式时，通过属性选择器来控制样式的作用域
2.2 style节点的scoped属性
    vue为style节点提供了scoped属性，从而防止组件之间的样式冲突问题
2.3 /deep/样式穿透
    如果给当前组件的style节点添加scoped属性，则当前组件的样式对其子组件是不生效的。如果想让某些样式对子组件生效，可以使用/deep/深度选择器(vue3.x版本废弃)
    vue3.x版本使用:deep(选择器)

3.组件的props
    为了提高组件的复用性，在封装vue组件时需要遵守一下原则：
    1.组件的DOM结构、style样式要尽量使用
    2.组件中要展示的数据，尽量由组件的使用者提供
    为了方便使用者为组件提供要展示的数据、vue组件提供了props的概念
3.1 什么是组件的props    
    props是组件的自定义属性、组件的使用者可以通过props把数据传递到子组件内部、供子组件内部进行使用
    props的作用：父组件通过props向子组件传递要展示的数据
    props的好处：提高了组件的复用性
3.2 在组件中声明props
    在封装组件时，可以把动态的数据项声明为props自定义属性，与el,data平级。自定义属性可以在当前组件的模板结构中直接使用被直接使用
3.3 无法使用未声明的props
    如果父组件给子组件传递了未声明的props属性，则这些属性会被忽略，无法被子组件使用
3.4 动态绑定props的值
    可以使用v-bind属性绑定的值，为组件动态绑定props的值
3.5 props的大小写命名

4.class与style绑定
    在实际开发中经常会遇到动态操作元素样式的需求。因此，vue允许开发者通过v-bind属性绑定指令，为元素动态绑定class属性的值和行内的style样式
4.2 以数组语法绑定HTML的class
    如果元素需要动态绑定多个class的类名，此时可以使用数组的语法格式
4.3 以对象语法绑定HTMl的class
    使用数组语法动态绑定class会导致模板结构臃肿的问题。可以使用对象语法进行简化
4.4 以对象语法绑定内联的style
    :style的对象语法十分直观，看起来非常像css，其实是一个js对象。css proptype名可以用驼峰式或短横线分隔