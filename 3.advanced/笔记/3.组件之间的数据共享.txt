1.组件之间的关系
    在项目开发中，组件之间的关系分为以下三种
    1.父子关系
    2.兄弟关系
    3.后代关系

2.父子组件之间的数据共享
    父子组件之间的数据共享又分为
    1.父 -> 子共享数据
    2.父 <- 子共享数据
    3.父 <-> 子双向数据同步
2.1 父组件向子组件共享数据
    父组件通过v-bind属性绑定向子组件共享数据。同时，子组件需要使用props接受数据。
2.2 子组件向父组件共享数据
    子组件向父组件传递数据需要使用自定义事件
    1.在子组件的emits中添加一个自定义事件名称
    2.在需要向父组件传递数据的时候使用this.$emit方法
        this.$emit('自定义事件名称',传递的数据)
    3.在父组件使用子组件标签时使用v-bind监听自定义事件，并执行一个函数
    4.在父组件methods处执行函数其中第一个参数就是传递过来的数据
2.3 父子组件之间数据的双向同步
    父组件在使用子组件期间，可以使用v-model指令维护组件内外数据的双向同步
    1.子组件声明emits成员，其中有一个属性为'update:数据名'
    2.子组件触发事件时使用this.$emit('update:数据名',需要传递的数据)方法。向父组件传递数据
    3.父组件在子组件标签上使用v-model:子组件数据名='父组件数据名'方式向子组件共享数据

3.兄弟组件
    兄弟组件之间实现数据共享的方案是eventBus。可以借助第三方包mitt来创建eventBus对象，从而实现兄弟组件之间的数据共享
    1.安装mitt依赖包
        npm install mitt@2.1.0 -S
    2.创建公共的EventBus模块
        在项目中创建EventBus.js文件，实例化mitt对象并导出
    3.在数据接受方定义自定义事件
        在数据接收方，调用bus.on('子组件自定义事件名称',事件处理函数)方法注册一个自定义事件
    4.在数据发送方触发事件
        在数据发送方，调用bus.emit('子组件自定义事件名称',要发送的数据)方法触发事件

4.后代关系组件之间的数据共享
    后代关系组件之间共享数据，指的是父节点的组件向其子孙组件共享数据。此时组件之间的嵌套关系比较复杂
    可以使用provide(发送)和inject(接收)实现后代关系组件之间的数据共享
    此方法必须是有关系的嵌套组件才能使用
4.1 父节点通过provide共享数据
    注意：provide是一个方法，向外部return一个对象，在对象中写要共享的数据名称
4.2 子节点通过inject接收数据
    注意：inject是一个数组，在数组中写数据名称即可
4.3 父节点对外共享一个响应式的数据
    父节点使用provide向下共享数据时，可以结合computed函数向下共享响应式的数据
    1.父节点中从vue导入computed函数
    2.在父节点provide中成员值中使用computed函数
    3.在子节点中inject正常接收，但是在使用时需要使用 属性.value形式使用
4.4 子孙组件使用响应式的数据
    如果父级节点共享的是响应式的数据，则子孙节点必须以.value的形式进行使用

5.了解vuex
    vuex是终极的组件之间的数据共享方案。在企业级的vue项目开发中，vuex可以让组件之间的数据共享变得更高效，清晰，且易于维护
    vueX脱离于组件之间，属于全局范围内的一个对象，组件把需要共享的数据放入vueX中，需要使用时直接从vueX中获取即可

6.总结
    父子关系    
        父 -> 子 属性绑定
        父 <- 子 事件绑定
        父 <-> 子 组件上的v-model
    兄弟关系
        eventBus
    全局数据共享
        vuex