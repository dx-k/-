1.什么是插槽
    插槽(slot)是vue为组件的封装者提供的能力。允许开发者在封装组件时，把不确定的，希望由用户指定的部分定义为插槽
    可以把插槽认为时组件封装期间，为用户预留的内容的占位符
2.插槽的基本用法
    子组件中使用slot为当前组件占用一个位置
    父组件中使用子组件标签时，在标签内添加的标签等元素就会被放到插槽占据的位置上
    如果一个组件内有多个插槽，那么会将所有内容放入每一个插槽中
2.1 没有预留插槽的内容会被丢弃
    如果在封装组件时没有预留任何插槽，则用户提供的任何内容都会被丢弃
2.2 后备内容
    封装组件时，可以为预留的插槽提供后备内容(默认内容)。如果组件的使用者没有为插槽提供任何内容，则后备内容会生效

3.具名插槽
    如果在封装组件时需要预留多个插槽，则需要为每个slot插槽提供具体的name名称。这种带有具体名称的插槽叫做'具名插槽'
    没有指定name名称的插槽会有隐式的名称叫做'default'
3.1 为具名插槽提供内容
    在向具名插槽提供内容时，我们可以在一个template元素上使用v-slot指令，并以v-slot的参数的形式提供其名称
    <template v-slot:name名称></template>
3.2 具名插槽的简写形式
    跟v-on和v-bind一样，v-slot也有缩写，即把参数之前的所有内容(v-slot:)替换成字符#

4.作用域插槽
    在封装组件的过程中，可以为预留的<slot>插槽绑定props数据，这种带有props数据的<slot>叫做"作用域插槽"
    作用域插槽可以让子组件传递数据给父组件
    1.在子组件slot中使用v-bind绑定属性
    2.在子组件data中添加属性
    3.在父组件使用组件实例时，在template中添加v-slot属性接收子组件的属性
4.1 当作用域插槽传递一个对象时可以使用解构的方式来简化写法